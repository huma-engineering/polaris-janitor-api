x-healthcheck:
  &FLASK_HEALTHCHECK
  healthcheck:
    test: curl -f http://localhost:5000/running || false
    interval: 3s
    retries: 60
    start_period: 10s
x-environment: &COMMON_ENVIRONMENT
  ENVIRONMENT: DEVELOPMENT
  POLARIS_API_KEY: test
  PROXY_URL: http://localhost
  HS_ISSUER: http://localhost/
  HS_KEY: secret
  AUTH0_CLIENT_ID: "doesnotmatter"
  AUTH0_AUDIENCE: "http://localhost/"
  NONCUSTOM_AUTH0_DOMAIN: "https://dhos-janitor-integration-tests"
  AUTH0_CUSTOM_DOMAIN: "dev"
  AUTH0_HS_KEY: "secret"
  DATABASE_HOST: postgres-db
  DATABASE_PORT: 5432
  DATABASE_USER: postgres-user
  DATABASE_PASSWORD: postgres-password
  NEO4J_DB_URL: neo4j-db
  NEO4J_DB_PORT: 7687
  RABBITMQ_HOST: rabbitmq
  RABBITMQ_USERNAME: guest
  RABBITMQ_PASSWORD: guest
  RABBITMQ_NOENCRYPT: "true"
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  REDIS_PASSWORD: any
  CUSTOMER_CODE: TST
  LOG_LEVEL: DEBUG
  LOG_FORMAT: COLOUR

  DEA_AUTH0_CLIENT_ID: something
  DEA_AUTH0_CLIENT_SECRET: something
  DEA_AUTH0_AUDIENCE: something
  DEA_AUTH0_TOKEN_URL: http://wiremock:8080/dea-auth0/token
  DEA_INGEST_API_URL: http://wiremock:8080/dea-ingest
  DHOS_ACTIVATION_AUTH_API_URL: http://dhos-activation-auth-api:5000
  DHOS_AGGREGATOR_API_URL: http://wiremock:8080/dhos-aggregator
  DHOS_AUDIT_API_URL: http://wiremock:8080/dhos-audit
  DHOS_AUDIT_API: http://wiremock:8080/dhos-audit
  DHOS_CONNECTOR_API_URL: http://wiremock:8080/dhos-connector
  DHOS_ENCOUNTERS_API_URL: http://dhos-encounters-api:5000
  DHOS_FUEGO_API_URL: http://dhos-fuego-api:5000
  DHOS_LOCATIONS_API: http://dhos-locations-api:5000
  DHOS_LOCATIONS_API_URL: http://dhos-locations-api:5000
  DHOS_MESSAGES_API_URL: http://wiremock:8080/dhos-messages
  DHOS_NOTIFICATIONS_API_URL: http://wiremock:8080/dhos-notifications
  DHOS_OBSERVATIONS_API_URL: http://dhos-observations-api:5000
  DHOS_PDF_API_URL: http://wiremock:8080/dhos-pdf
  DHOS_QUESTIONS_API_URL: http://dhos-questions-api:5000
  DHOS_TELEMETRY_API_URL: http://dhos-telemetry-api:5000
  DHOS_TRUSTOMER_API_HOST: http://wiremock:8080/dhos-trustomer
  DHOS_SERVICES_API_URL: http://dhos-services-api:5000
  DHOS_USERS_API_URL: http://dhos-users-api:5000
  GDM_BG_READINGS_API_URL: http://gdm-bg-readings-api:5000
  DHOS_RULES_API_HOST: http://dhos-rules-api:5000
  DHOS_HAPI_FHIR_API_URL: http://dhos-hapi-fhir-api:5000
  ALLOW_DROP_DATA: "True"
  DHOS_URL_API_REGION_ID: R
  SERVER_TIMEZONE: Europe/London
  MOCK_GDM_PATIENT_SCOPE: >-
    read:gdm_answer
    read:gdm_bg_reading
    read:gdm_medication
    read:gdm_message
    read:gdm_patient_abbreviated
    read:gdm_question
    read:gdm_rule
    read:gdm_telemetry
    read:gdm_trustomer
    write:gdm_answer
    write:gdm_bg_reading
    write:gdm_message
    write:gdm_telemetry
    write:gdm_terms_agreement
  MOCK_GDM_CLINICIAN_SCOPE: >-
    read:gdm_patient
    write:gdm_patient
    read:gdm_clinician
    write:gdm_clinician
    read:gdm_location
    read:gdm_message
    write:gdm_message
    read:gdm_bg_reading_all
    write:gdm_alert
    read:gdm_medication
    read:gdm_pdf
    write:gdm_pdf
    read:gdm_csv
    read:gdm_question
    read:gdm_answer_all
    write:gdm_answer_all
    read:gdm_activation
    write:gdm_activation
    read:gdm_trustomer
    read:gdm_telemetry_all
    write:gdm_telemetry
    write:gdm_terms_agreement
  MOCK_GDM_SUPERCLINICIAN_SCOPE: >-
    read:gdm_patient_all
    write:gdm_patient_all
    read:gdm_clinician_all
    write:gdm_clinician_all
    read:gdm_location_all
    read:gdm_message_all
    write:gdm_message_all
    read:gdm_bg_reading_all
    write:gdm_alert
    read:gdm_medication
    read:gdm_pdf
    write:gdm_pdf
    read:gdm_csv
    read:gdm_question
    read:gdm_answer_all
    write:gdm_answer_all
    write:gdm_activation
    read:gdm_activation
    read:gdm_trustomer
    read:gdm_telemetry_all
    write:gdm_telemetry
    write:gdm_terms_agreement
  MOCK_SEND_ENTRY_CLINICIAN_SCOPE: >-
    read:send_clinician
    read:send_patient
    read:send_observation
    write:send_observation
    read:send_rule
    write:send_encounter
    read:send_encounter
    read:send_trustomer
    write:send_patient
  MOCK_SEND_CLINICIAN_SCOPE: >-
    read:send_clinician
    read:send_encounter
    read:send_location
    read:send_observation
    read:send_patient
    read:send_pdf
    read:send_rule
    read:send_trustomer
    write:send_encounter
    write:send_observation
    write:send_patient
    write:send_terms_agreement
  MOCK_SEND_ENTRY_DEVICE_SCOPE: >-
    read:send_entry_identifier
    read:send_device
    read:send_location

x-gdm-bff-environment: &GDM_BFF_ENVIRONMENT
  <<: *COMMON_ENVIRONMENT
  DATABASE_NAME: gdm-bff-db
  DHOS_AGGREGATOR_API_HOST: doesntmatter
  DHOS_FUEGO_API_HOST: http://dhos-fuego-api:5000
  DHOS_RULES_ENGINE_URL: http://dhos-rules-engine:3000
  SYNE_API_URL: doesntmatter
  SYNE_API_KEY: doesntmatter
  EXTERNAL_URL: http://external-url.com
  SMS_DEFAULT_SENDER: GDm-Health
  DHOS_URL_API_REGION_ID: R
  DISABLE_CREATE_USER_IN_AUTH0: "True"
  GDM_BCP_OUTPUT_DIR: gdm-bcp-output
  DBM_BCP_OUTPUT_DIR: dbm-bcp-output
  SEND_BCP_OUTPUT_DIR: send-bcp-output
  SEND_DISCHARGE_OUTPUT_DIR: send-discharge-output
  SEND_WARD_REPORT_OUTPUT_DIR: send-ward-report-output
  SEND_TMP_OUTPUT_DIR: /tmp
  SEND_BCP_RSYNC_DIR: send-bcp-rsync
  GDM_ARTICLES_WWW: "https://gdm-bff:5000"
  TWILIO_CALL_BACK_URL: "http://dummy-callback-url"
  COUNTRY_CODE: GB
  TWILIO_ACCOUNT_SID: test
  TWILIO_AUTH_TOKEN: test
  TWILIO_DISABLED: "true"
  SMTP_HOST: fake-smtp
  SMTP_AUTH_PASS: pass
  SMTP_AUTH_USER: user
  EMAIL_SENDER: "sender@domain.com"
  DISABLE_EMAIL_SEND: "false"
  SQLALCHEMY_POOL_SIZE: 10
  CELERY_BROKER_URL: redis://redis:6379/0
  CELERY_BACKEND_URL: redis://redis:6379/0
  GDM_BASE_URL: http://gdm-bff:5000
  DHOS_ACTIVATION_AUTH_API_HOST: http://dhos-activation-auth-api:5000
  DHOS_LOCATIONS_API_HOST: http://dhos-locations-api:5000
  DHOS_MEDICATIONS_API_HOST: http://wiremock:8080/dhos-medications
  DHOS_MESSAGES_API_HOST: http://wiremock:8080/dhos-messages
  DHOS_PDF_API_HOST: doesntmatter
  DHOS_QUESTIONS_API_HOST: doesntmatter
  DHOS_RULES_API_HOST: http://dhos-rules-api:5000
  DHOS_SERVICES_API_HOST: http://dhos-services-api:5000
  DHOS_SMS_API_HOST: doesntmatter
  DHOS_URL_API_HOST: http://dhos-url-api:5000
  DHOS_USERS_API_HOST: http://dhos-users-api:5000
  DHOS_TELEMETRY_API_HOST: doesntmatter
  DHOS_TRUSTOMER_API_HOST: http://wiremock:8080/dhos-trustomer
  GDM_ARTICLES_API_HOST: doesntmatter
  GDM_BG_READINGS_API_HOST: http://gdm-bg-readings-api:5000
  TOKEN_URL: "http://localhost/token"
  AUTH0_AUDIENCE: http://localhost/
  AUTH0_CLIENT_ID: dummy
  AUTH0_MGMT_CLIENT_ID: "doesnotmatter"
  AUTH0_MGMT_CLIENT_SECRET: "shhh"
  AUTH0_AUTHZ_CLIENT_ID: "doesnotmatter"
  AUTH0_AUTHZ_CLIENT_SECRET: "shhh"
  AUTH0_AUTHZ_WEBTASK_URL: "doesnotmatter"
  NONCUSTOM_AUTH0_DOMAIN: "https://integration-tests"
  AUTH0_CUSTOM_DOMAIN: "dev"
  AUTH0_HS_KEY: "secret"
  TRUSTOMER_CONFIG_MOUNT: "trustomer-config-dummy"

volumes:
  app-volume:

services:
  dhos-janitor-integration-tests:
    container_name: "dhos-janitor-integration-tests"
    build:
      context: ./
      args:
        - PIP_EXTRA_INDEX_URL
    environment:
      <<: *COMMON_ENVIRONMENT
      SYSTEM_JWT_SCOPE: >-
        read:audit_event read:gdm_bg_reading_all read:gdm_sms read:gdm_message_all read:gdm_survey_all read:gdm_patient_all
        read:send_clinician read:send_encounter read:send_entry_identifier
        write:gdm_bg_reading write:send_encounter write:send_observation write:patient_all write:gdm_clinician_all
      BEHAVE_ARGS: ${BEHAVE_ARGS:-}
      REPORT_PORTAL_URL: ${REPORT_PORTAL_URL:-}
      REPORT_PORTAL_TOKEN: ${REPORT_PORTAL_TOKEN:-}
      REPORT_PORTAL_PROJECT: ${REPORT_PORTAL_PROJECT:-}
      ENVIRONMENT: ${ENVIRONMENT:-}
      RELEASE: ${RELEASE:-}
    command: >
      bash -c "behave --no-capture --no-logcapture ${BEHAVE_ARGS:-}"
    depends_on:
      "gdm-bff":
        condition: service_healthy
      "dhos-janitor-api":
        condition: service_healthy
      "wiremock":
        condition: service_healthy

  dhos-janitor-api:
    container_name: "dhos-janitor-api"
    build:
      context: ../
    environment:
      <<: *COMMON_ENVIRONMENT
      EXTERNAL_URL: http://dhos-janitor-api:5000
      SMTP_HOST: dummy
      SMTP_AUTH_PASS: dummy
      SMTP_AUTH_USER: dummy
      EMAIL_SENDER: dummy
      GDM_SMS_SENDER: dummy
      GDM_LINK_MSG: http://dummy
      TOKEN_URL: "https://dummy/oauth/token"
      AUTH0_MGMT_CLIENT_ID: "dummy"
      AUTH0_MGMT_CLIENT_SECRET: "dummy"
      AUTH0_AUTHZ_CLIENT_ID: "doesnotmatter"
      AUTH0_AUTHZ_CLIENT_SECRET: "dummy"
      AUTH0_AUTHZ_WEBTASK_URL: "dummy"
      NONCUSTOM_AUTH0_DOMAIN: "https://dummy"
      AUTH0_CUSTOM_DOMAIN: "dev"
      AUTH0_HS_KEY: "secret"
      DHOS_ACTIVATION_AUTH_API: http://dhos-activation-auth-api:5000
      DHOS_ENCOUNTERS_API: http://dhos-encounters-api:5000
      DHOS_FUEGO_API: http://dhos-fuego-api:5000
      DHOS_MEDICATIONS_API: http://wiremock:8080/dhos-medications
      DHOS_MESSAGES_API: http://wiremock:8080/dhos-messages
      DHOS_QUESTIONS_API: http://dhos-questions-api:5000
      DHOS_SERVICES_API: http://dhos-services-api:5000
      DHOS_USERS_API: http://dhos-users-api:5000
      DHOS_TELEMETRY_API: http://wiremock:8080/dhos-telemetry
      DHOS_TRUSTOMER_API: http://wiremock:8080/dhos-trustomer
      DHOS_URL_API: https://dhos-url-api:5000
      GDM_ARTICLES_API: http://dhos-articles-api:5000
      GDM_BG_READINGS_API: http://gdm-bg-readings-api:5000
      DHOS_OBSERVATIONS_API: http://dhos-observations-api:5000
      GDM_BFF: http://gdm-bff:5000
      SEND_BFF: http://send-bff:5000
      REDIS_INSTALLED: "False"
    <<: *FLASK_HEALTHCHECK
    command: >
      python -m dhos_janitor_api
    depends_on:
      "gdm-bff":
        condition: service_healthy
      "celery-worker":
        condition: service_healthy

  gdm-bff:
    container_name: "gdm-bff"
    image: ghcr.io/huma-engineering/gdm-v2-bff:main-d2f4f2cb
    environment:
      <<: *GDM_BFF_ENVIRONMENT
    <<: *FLASK_HEALTHCHECK
    command: >
      bash -c "flask db upgrade
      && python -m gdm_bff"
    depends_on:
      "postgres-db":
        condition: service_healthy
      "dhos-rules-engine":
        condition: service_started

  redis:
    container_name: redis
    image: docker.io/redis:7.2-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "6379"

  celery-worker:
    container_name: celery-worker
    image: ghcr.io/huma-engineering/gdm-v2-bff:main-d2f4f2cb
    environment:
      <<: *GDM_BFF_ENVIRONMENT
    command: celery -A gdm_bff.autoapp worker --loglevel=debug
    volumes:
      - ../bff/trustomer-config-dummy:/trustomer-config
    healthcheck:
      test: [ "CMD-SHELL", "celery inspect ping --destination celery@$$HOSTNAME" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      "gdm-bff":
        condition: service_healthy
      "redis":
        condition: service_healthy

  dhos-rules-engine:
    container_name: "dhos-rules-engine"
    image: ghcr.io/huma-engineering/dhos/dhos-rules-engine:dev
    command: "python -m dhos_rules_api"

  postgres-db:
    container_name: "postgres-db"
    build:
      context: ./postgres-db
    environment:
      - POSTGRES_USER=postgres-user
      - POSTGRES_PASSWORD=postgres-password
      - POSTGRES_MULTIPLE_DATABASES="gdm-bff-db","dhos-url-api"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 2s
      timeout: 5s
      retries: 20
      start_period: 10s
    ports:
      - "5432:5432"

  wiremock:
    container_name: "wiremock"
    image: rodolpheche/wiremock:2.25.1
    command: ["--local-response-templating"]
    healthcheck:
      test: "curl --location --request POST 'http://localhost:8080/__admin/mappings' || false"
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

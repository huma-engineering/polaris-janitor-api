openapi: 3.0.3
info:
  description: The DHOS Janitor API is responsible for managing data in non-production
    environments.
  title: DHOS Janitor API
  version: 1.0.0
paths:
  /running:
    get:
      summary: Verify service is running
      description: Verifies that the service is running. Used for monitoring in kubernetes.
      tags:
      - monitoring
      responses:
        '200':
          description: If we respond, we are running
          content:
            application/json:
              schema:
                type: object
                properties:
                  running:
                    type: boolean
                    example: true
      operationId: flask_batteries_included.blueprint_monitoring.app_running
  /version:
    get:
      summary: Get version information
      description: Get the version number, circleci build number, and git hash.
      tags:
      - monitoring
      responses:
        '200':
          description: Version numbers
          content:
            application/json:
              schema:
                type: object
                properties:
                  circle:
                    type: string
                    example: '1234'
                  hash:
                    type: string
                    example: 366c204
      operationId: flask_batteries_included.blueprint_monitoring.app_version
  /dhos/v1/reset_task:
    post:
      summary: Create reset task
      description: Drops data from the microservice databases, and repopulates them
        with generated tests data. Passing a list of microservices in the request
        body will reset only those services. Responds with an HTTP 202 and a Location
        header - subsequent HTTP GET requests to this URL will provide the status
        of the task.
      tags:
      - task
      parameters:
      - name: num_gdm_patients
        in: query
        required: false
        description: Number of GDM patients to create
        schema:
          type: integer
          default: 12
      - name: num_dbm_patients
        in: query
        required: false
        description: Number of DBM patients to create
        schema:
          type: integer
          default: 18
      - name: num_send_patients
        in: query
        required: false
        description: Number of SEND patients to create
        schema:
          type: integer
          default: 12
      - name: num_hospitals
        in: query
        required: false
        description: Number of hospitals to create
        schema:
          type: integer
          example: 2
      - name: num_wards
        in: query
        required: false
        description: Number of wards to create
        schema:
          type: integer
          example: 2
      requestBody:
        description: JSON body containing the observation set
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/ResetRequest'
      responses:
        '202':
          description: Reset started
          headers:
            Location:
              description: The location of the created patient
              schema:
                type: string
                example: /dhos/v1/task/2c4f1d24-2952-4d4e-b1d1-3637e33cc161
        '409':
          description: Reset already in progress
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_janitor_api.blueprint_api.create_reset_task
      security:
      - bearerAuth: []
  /dhos/v1/task/{task_id}:
    get:
      summary: Get task results
      description: Gets the result of a task by UUID. Responds with either a 202 if
        the task is ongoing, a 200 if it has completed, or a 400 if it has failed.
      tags:
      - task
      parameters:
      - name: task_id
        in: path
        required: true
        description: Task UUID
        schema:
          type: string
          example: bc61563a-2573-48e6-b5c9-1e9a21d06de6
      responses:
        '200':
          description: Task complete
        '202':
          description: Task ongoing
        '400':
          description: Task error
        default:
          description: Error, e.g. 404 Not Found, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_janitor_api.blueprint_api.get_task
      security:
      - bearerAuth: []
  /dhos/v1/populate_gdm_task:
    post:
      summary: Create populate GDM task
      description: "Note: despite the name, this endpoint adds data for both GDM and\
        \ DBM patients. Populate GDM and DBM patients with recent data. Data consists\
        \ of readings and messages. You can configure the number of recent days you\
        \ want to add data for using the (optional) query parameter; 1 means generate\
        \ data for yesterday, 2 means yesterday and the day before, etc. Responds\
        \ with an HTTP 202 and a\n  Location header - subsequent HTTP GET requests\
        \ to this URL will provide the status of the task."
      tags:
      - task
      parameters:
      - name: days
        in: query
        required: false
        description: The number of recent days for which to populate data
        schema:
          type: integer
          default: 1
      - name: use_system_jwt
        in: query
        required: false
        description: Use a system jwt to populate the additional data
        schema:
          type: boolean
          default: false
      responses:
        '202':
          description: Reset started
          headers:
            Location:
              description: The location of the created patient
              schema:
                type: string
                example: /dhos/v1/task/2c4f1d24-2952-4d4e-b1d1-3637e33cc161
        '409':
          description: Reset already in progress
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_janitor_api.blueprint_api.populate_gdm_data
      security:
      - bearerAuth: []
  /dhos/v1/clinician/jwt:
    get:
      summary: Get clinician JWT
      description: Retrieve a clinician JWT from Auth0.
      tags:
      - jwt
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Basic authorization header with b64-encoded username:password
        schema:
          type: string
          example: Basic d29scmFiQG1haWwuY29tOlBhc3NAd29yZDEh
      - name: use_auth0
        in: query
        required: false
        description: Make request to Auth0 to retrieve JWT if set to `true`; Otherwise,
          generate JWT locally.
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: JWT response
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: a valid JWT
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_janitor_api.blueprint_api.get_clinician_jwt
  /dhos/v1/patient/{patient_id}/jwt:
    get:
      summary: Get patient JWT
      description: Retrieve a patient JWT from Activation Auth API. Involves creation
        of a patient activation, and validation of that activation.
      tags:
      - jwt
      parameters:
      - name: patient_id
        in: path
        required: true
        description: Patient UUID
        schema:
          type: string
          example: 55b283e4-a916-4c9c-8986-d75d96996960
      responses:
        '200':
          description: JWT response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                    description: a valid JWT
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_janitor_api.blueprint_api.get_patient_jwt
  /dhos/v1/system/{system_id}/jwt:
    get:
      summary: Get system JWT
      description: Retrieve a system JWT from System Auth API
      tags:
      - jwt
      parameters:
      - name: system_id
        in: path
        required: true
        description: System identifier
        schema:
          type: string
          example: dhos-robot
      responses:
        '200':
          description: JWT response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                    description: a valid JWT
        default:
          description: Error, e.g. 400 Bad Request, 503 Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: dhos_janitor_api.blueprint_api.get_system_jwt
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          description: HTTP response code
          example: 404
        message:
          type: string
          description: Message attached to response
          example: Not Found
      required:
      - code
      description: An error response in json format
    ResetRequest:
      nullable: true
      type: object
      properties:
        targets:
          type: array
          description: List of services to reset
          items:
            type: string
      title: Reset request
  responses:
    BadRequest:
      description: Bad or malformed request was received
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: Service or dependent resource not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
